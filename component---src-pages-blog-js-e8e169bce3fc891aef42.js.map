{"version":3,"sources":["webpack:///./src/components/card.js","webpack:///./src/pages/blog.js"],"names":["Card","render","className","this","props","title","dangerouslySetInnerHTML","__html","description","to","index","moments","postedon","fromNow","Component","Blog","useState","onceoffline","setonceoffline","timediff","settimediff","timeoutsync","settimeoutsync","blogviews","setblogviews","postdata","data","allMarkdownRemark","edges","console","log","useEffect","fetch","then","res","json","result","timeDiff","Math","abs","Date","now","unixtime","catch","err","Axios","get","API","location","window","href","onChange","con","online","hidden","site","siteMetadata","rel","target","floor","map","element","key","node","fields","slug","frontmatter","excerpt","date","query"],"mappings":"kTAiCeA,G,4GAzBbC,OAAA,WACE,OACE,yBAAKC,UAAU,cACb,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,cAAcC,KAAKC,MAAMC,OACvC,uBACEH,UAAU,cACVI,wBAAyB,CAAEC,OAAQJ,KAAKC,MAAMI,eAMhD,kBAAC,OAAD,CAAMC,GAAE,GAAKN,KAAKC,MAAMM,MAASR,UAAU,2BAA3C,gBAIF,yBAAKA,UAAU,mCAAf,UACUS,IAAQR,KAAKC,MAAMQ,UAAUC,a,GAnB5BC,c,qECIJ,SAASC,EAAKX,GAAQ,IAAD,EACIY,oBAAS,GAAxCC,EAD2B,KACdC,EADc,OAGFF,mBAAS,GAAlCG,EAH2B,KAGjBC,EAHiB,OAIIJ,oBAAS,GAAxCK,EAJ2B,KAIdC,EAJc,OAKAN,mBAAS,IAApCO,EAL2B,KAKhBC,EALgB,KAO5BC,EAAWrB,EAAMsB,KAAKC,kBAAkBC,MAuC9C,OAtCAC,QAAQC,IAAIL,GAEZM,qBAAU,WAGRC,MAAM,mCACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAGJ,IAAIC,EAAWC,KAAKC,IAAIC,KAAKC,MAAQ,IAAOL,EAAOM,UAEnDtB,EAAYiB,EAAW,IACnBA,EAAW,KACbf,GAAe,MAIlBqB,OAAM,SAAAC,OAITC,IAAMC,IAAOC,2CAAgB,CAC3BC,SAAUC,OAAOD,SAASE,OAEzBjB,MAAK,SAAAG,IACoB,IAApBA,EAAOV,KAAKkB,KAIdpB,EAAaY,EAAOV,KAAKH,cAG5BoB,OAAM,SAAAC,SAGR,IAGD,yBAAK1C,UAAU,WACb,kBAAC,IAAD,MAEA,kBAAC,WAAD,CACEiD,SAAU,SAAAC,GACRlC,GAAe,IAEjBjB,OAAQ,cAAGoD,OAAH,OAAgB,iCAE1B,kBAAC,UAAD,KACE,yBAAKnD,UAAU,cAAf,8BAEF,kBAAC,SAAD,KACE,yBAAKoD,QAASrC,EAAaf,UAAU,aAArC,iBAIF,kBAAC,IAAD,CACEG,MAAOD,EAAMsB,KAAK6B,KAAKC,aAAanD,MACpCG,YAAaJ,EAAMsB,KAAK6B,KAAKC,aAAahD,cAE5C,yBAAKN,UAAU,WAAWoD,OAAQjC,GAChC,uBAAG6B,KAAK,kBAAkBO,IAAI,sBAAsBC,OAAO,UAA3D,2BAC2BpB,KAAKqB,MAAMxC,GADtC,8CAKF,yBAAKjB,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,QAAd,eAEE,0BAAMA,UAAU,uBAAhB,UAEDuB,EAASmC,KAAI,SAACC,EAASnD,GACtB,OACE,kBAAC,EAAD,CACEoD,IAAKD,EAAQE,KAAKC,OAAOC,KACzB5D,MAAOwD,EAAQE,KAAKG,YAAY7D,MAChCG,YAAaqD,EAAQE,KAAKI,QAAU,OACpCvD,SAAUiD,EAAQE,KAAKG,YAAYE,KACnC1D,MAAOmD,EAAQE,KAAKC,OAAOC,WAiBnC,yBAAK/D,UAAU,YACb,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,eAAd,wBACA,yBAAKA,UAAU,aACb,yBACEA,UAAS,gBAAiBqB,EAAY,GAAK,iBAAlC,KAET,wBAAIrB,UAAU,IAAIqB,SAMvB,IACP,kBAAC,IAAD,OAKC,IAAM8C,EAAK","file":"component---src-pages-blog-js-e8e169bce3fc891aef42.js","sourcesContent":["import React, { Component } from \"react\"\n// import Markdown from \"markdown-to-jsx\"\nimport { Link } from \"gatsby\"\nimport moments from \"moment\"\nimport \"../styles/card.css\"\n\n// const moments = require(\"moment/moment\")\nclass Card extends Component {\n  render() {\n    return (\n      <div className=\"card mb-4 \">\n        <div className=\"card-body postcard\">\n          <h2 className=\"card-title\">{this.props.title}</h2>\n          <p\n            className=\"card-text  \"\n            dangerouslySetInnerHTML={{ __html: this.props.description }}\n          >\n            {/* <Markdown>{this.props.description}</Markdown> */}\n\n            {/* <Markdown children={this.props.description} /> */}\n          </p>\n          <Link to={`${this.props.index}`} className=\"btn btn-outline-primary\">\n            Read More &rarr;\n          </Link>\n        </div>\n        <div className=\"card-footer postcard text-muted\">\n          Posted {moments(this.props.postedon).fromNow()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Card\n\n// // import { graphql } from \"gatsby\"\n// export default function Template({\n//   data, // this prop will be injected by the GraphQL query below.\n// }) {\n//   const { markdownRemark } = data // data.markdownRemark holds your post data\n//   const { frontmatter, html } = markdownRemark\n//   return (\n//     <div className=\"blog-post-container\">\n//       <div className=\"blog-post\">\n//         <h1>{frontmatter.title}</h1>\n//         <h2>{frontmatter.date}</h2>\n//         <div\n//           className=\"blog-post-content\"\n//           dangerouslySetInnerHTML={{ __html: html }}\n//         />\n//       </div>\n//     </div>\n//   )\n// }\n// export const pageQuery = graphql`\n//   query($slug: String!) {\n//     markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n//       html\n//       frontmatter {\n//         date(formatString: \"MMMM DD, YYYY\")\n//         slug\n//         title\n//       }\n//     }\n//   }\n// `\n","import React, { useState, useEffect } from \"react\"\nimport { Offline, Online, Detector } from \"react-detect-offline\"\nimport Card from \"../components/card\"\nimport Navbar from \"../components/navbar\"\nimport \"../styles/blog.css\"\nimport SEO from \"../components/seo\"\nimport Footerblogpost from \"../components/footerblogpost\"\nimport Axios from \"axios\"\n\nconst API = \"https://blogrizky.herokuapp.com\"\n\nexport default function Blog(props) {\n  const [onceoffline, setonceoffline] = useState(false)\n  // const [isloading, setisloading] = useState(true)\n  const [timediff, settimediff] = useState(0)\n  const [timeoutsync, settimeoutsync] = useState(true)\n  const [blogviews, setblogviews] = useState(\"\")\n\n  const postdata = props.data.allMarkdownRemark.edges\n  console.log(postdata)\n\n  useEffect(() => {\n    // callMyPromise()\n    // setisloading(false)\n    fetch(\"https://worldtimeapi.org/api/ip\")\n      .then(res => res.json())\n      .then(result => {\n        // console.log(result.unixtime);\n\n        var timeDiff = Math.abs(Date.now() / 1000 - result.unixtime)\n        // console.log(\"timediff\", timeDiff);\n        settimediff(timeDiff / 60)\n        if (timeDiff > 600) {\n          settimeoutsync(false)\n          // console.log(\"Data appears to be \" + timeDiff / 60 + \" minutes old.\");\n        }\n      })\n      .catch(err => {\n        // console.log(err);\n      })\n\n    Axios.get(`${API}/api/blog`, {\n      location: window.location.href,\n    })\n      .then(result => {\n        if (result.data.err === false) {\n          // console.log(\"\\n\\n\\n\\n\");\n          // console.log(result.data);\n\n          setblogviews(result.data.blogviews)\n        }\n      })\n      .catch(err => {\n        // console.log(err);\n      })\n  }, [])\n\n  return (\n    <div className=\"maindiv\">\n      <Navbar />\n      {/* <h1>Bolgger</h1> */}\n      <Detector\n        onChange={con => {\n          setonceoffline(true)\n        }}\n        render={({ online }) => <div></div>}\n      />\n      <Offline>\n        <div className=\"offlinediv\">You appears to be offline</div>\n      </Offline>\n      <Online>\n        <div hidden={!onceoffline} className=\"onlinediv\">\n          Welcome Back\n        </div>\n      </Online>\n      <SEO\n        title={props.data.site.siteMetadata.title}\n        description={props.data.site.siteMetadata.description}\n      />\n      <div className=\"timesync\" hidden={timeoutsync}>\n        <a href=\"https://time.is\" rel=\"noopener noreferrer\" target=\"_blank\">\n          your time appears to be {Math.floor(timediff)} minutes off . Is your\n          clock out of sync?\n        </a>\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8\">\n            <h1 className=\"my-4\">\n              Blogged by &ensp;\n              <span className=\"smlltextblogheading\">Rizky</span>\n            </h1>\n            {postdata.map((element, index) => {\n              return (\n                <Card\n                  key={element.node.fields.slug}\n                  title={element.node.frontmatter.title}\n                  description={element.node.excerpt + \"....\"}\n                  postedon={element.node.frontmatter.date}\n                  index={element.node.fields.slug}\n                />\n              )\n            })}\n            {/* <ul class=\"pagination justify-content-center mb-4\">\n              <li class=\"page-item\">\n                <a class=\"page-link\" href=\"#\">\n                  &larr; Older\n                </a>\n              </li>\n              <li class=\"page-item disabled\">\n                <a class=\"page-link\" href=\"#\">\n                  Newer &rarr;\n                </a>\n              </li>\n            </ul> */}\n          </div>\n          <div className=\"col-lg-3\">\n            <div className=\"card my-4 commentsection\">\n              <h5 className=\"card-header\">Total views All time</h5>\n              <div className=\"card-body\">\n                <div\n                  className={`input-group ${blogviews ? \"\" : \"loadskceliton\"} `}\n                >\n                  <h5 className=\"\">{blogviews}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>{\" \"}\n      <Footerblogpost />\n    </div>\n  )\n}\n\nexport const query = graphql`\n  query PostDataQuery {\n    site {\n      siteMetadata {\n        description\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}