{"componentChunkName":"component---src-templates-blog-post-js","path":"/5ddd5b35e8da2700179c3d4e/","result":{"data":{"site":{"siteMetadata":{"title":"Rajitha's blog"}},"markdownRemark":{"id":"fd640bbe-6d81-5a3f-aa29-b31b5306ae4f","excerpt":"Hi everyone , So Let’s get started. Promise.all() \n\nPromise.all is a very handy function when you want to make many promises and then resolve them all at once…","html":"<h2>Hi everyone ,</h2>\n<hr>\n<span style=\"font-size:1.28rem;\">\nIn this post, I'll walk you through with some awesome javascript features, that are super important in many situations.\nthese are fairly popular but many of us don't use them.so I will give some examples where they come in handy\n<h2>So Let’s get started.</h2>\n<ol>\n<li>Promise.all()\n<br/>\nPromise.all is a very handy function when you want to make many promises and then resolve them all at once.\nfor example, let’s say that you get 10 files from frontend and you need to upload those 10 files to an aws s3 bucket.\nwhat you can do is make an array and push all the upload promises to that array. then call <code class=\"language-text\">Promise.all()</code> function with that promise array as the input parameter.\nthen it will dispatch all the promises at once and after all the promises are fulfilled it will resolve an array of objects with the fulfilled individual promises.\n<div id=\"gist99695289\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-promiseall-js\" class=\"file \">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-javascript  \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip>\n      <tr>\n        <td id=\"file-promiseall-js-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-promiseall-js-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>var</span> <span class=pl-s1>files</span> <span class=pl-c1>=</span> <span class=pl-s1>req</span><span class=pl-kos>.</span><span class=pl-c1>files</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-promiseall-js-LC2\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>var</span> <span class=pl-s1>promisarr</span> <span class=pl-c1>=</span> <span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-c>//initialize promises array</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-promiseall-js-LC3\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>function</span> <span class=pl-en>multiplefiles3</span><span class=pl-kos>(</span><span class=pl-s1>resobj</span><span class=pl-kos>)</span> <span class=pl-kos>{</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-promiseall-js-LC4\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-en>log</span><span class=pl-kos>(</span><span class=pl-s1>resobj</span><span class=pl-kos>.</span><span class=pl-c1>originalname</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-promiseall-js-LC5\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-k>var</span> <span class=pl-s1>params</span> <span class=pl-c1>=</span> <span class=pl-kos>{</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-promiseall-js-LC6\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-c1>Bucket</span>: <span class=pl-s>&quot;******&quot;</span><span class=pl-kos>,</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-promiseall-js-LC7\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-c1>Key</span>: <span class=pl-s1>resobj</span><span class=pl-kos>.</span><span class=pl-c1>originalname</span><span class=pl-kos>,</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-promiseall-js-LC8\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-c1>Body</span>: <span class=pl-s1>resobj</span><span class=pl-kos>.</span><span class=pl-c1>buffer</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-promiseall-js-LC9\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-kos>}</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-promiseall-js-LC10\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-k>return</span> <span class=pl-s1>s3bucket</span><span class=pl-kos>.</span><span class=pl-en>upload</span><span class=pl-kos>(</span><span class=pl-s1>params</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>promise</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-promiseall-js-LC11\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-kos>}</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-promiseall-js-LC12\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-promiseall-js-LC13\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>var</span> <span class=pl-s1>uploadsize</span> <span class=pl-c1>=</span> <span class=pl-c1>0</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-promiseall-js-LC14\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-s1>files</span><span class=pl-kos>.</span><span class=pl-en>map</span><span class=pl-kos>(</span><span class=pl-s1>file</span> <span class=pl-c1>=&gt;</span> <span class=pl-kos>{</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-promiseall-js-LC15\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-s1>uploadsize</span> <span class=pl-c1>=</span> <span class=pl-s1>uploadsize</span> <span class=pl-c1>+</span> <span class=pl-s1>file</span><span class=pl-kos>.</span><span class=pl-c1>size</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"></td>\n        <td id=\"file-promiseall-js-LC16\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-s1>promisarr</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-en>multiplefiles3</span><span class=pl-kos>(</span><span class=pl-s1>file</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-c>//push individual promises to that array , i&#39;ll refer them as child promises</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"></td>\n        <td id=\"file-promiseall-js-LC17\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"></td>\n        <td id=\"file-promiseall-js-LC18\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"></td>\n        <td id=\"file-promiseall-js-LC19\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-v>Promise</span><span class=pl-kos>.</span><span class=pl-en>all</span><span class=pl-kos>(</span><span class=pl-s1>promisarr</span><span class=pl-kos>)</span><span class=pl-c>//evoke Promise.all() function , i&#39;ll refer this as parent promise </span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"></td>\n        <td id=\"file-promiseall-js-LC20\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-kos>.</span><span class=pl-en>then</span><span class=pl-kos>(</span><span class=pl-s1>result</span> <span class=pl-c1>=&gt;</span> <span class=pl-kos>{</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"></td>\n        <td id=\"file-promiseall-js-LC21\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-c>//this result is a array of objects from the fulfiled promise</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"></td>\n        <td id=\"file-promiseall-js-LC22\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-kos>}</span><span class=pl-kos>)</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"></td>\n        <td id=\"file-promiseall-js-LC23\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-kos>.</span><span class=pl-en>catch</span><span class=pl-kos>(</span><span class=pl-s1>err</span> <span class=pl-c1>=&gt;</span> <span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-en>log</span><span class=pl-kos>(</span><span class=pl-s1>err</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-c>//if any of those promises get reject this whole promise will be rejected</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-promiseall-js-L24\" class=\"blob-num js-line-number\" data-line-number=\"24\"></td>\n        <td id=\"file-promiseall-js-LC24\" class=\"blob-code blob-code-inner js-file-line\">  </td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/RizkyRajitha/721ce1f1e8f6ed0a9f368c3de821a3da/raw/65e85e1e39381d5c0f14a1ed72eb03dea886609d/promiseall.js\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/RizkyRajitha/721ce1f1e8f6ed0a9f368c3de821a3da#file-promiseall-js\">promiseall.js</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div>\n<span style=\"font-size:1.6rem ; color:red;\">\nkeep in mind that this is all of it or none at all.\nSo even if one of the child promises got rejected, we will get the whole thing (parent promise) rejected.\n</span></li>\n</ol>\n<hr>\n<ol>\n<li>for (let item of array)\n<br/>\nThis is also another useful way of iterating through an array.But why we have <code class=\"language-text\">array.forEach()</code> right. But the thing is you cannot use <code class=\"language-text\">break</code> statements inside <code class=\"language-text\">array.forEach()</code> so, let’s say after meeting a specific condition your <code class=\"language-text\">forEach</code> loop needs to stop. But you can’t do it in <code class=\"language-text\">forEach</code> loop. That’s where our friend <code class=\"language-text\">for (let item of array)</code> comes. This does exactly what <code class=\"language-text\">array.forEach()</code> do, but we get the option to <code class=\"language-text\">break</code> the <code class=\"language-text\">forloop</code> anytime we want in any breakpoint.\nOf course, you can use a regular for loop for this. But this is a pretty clean way to get the job done<br>\n<div id=\"gist99695920\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-forloop-js\" class=\"file \">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-javascript  \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip>\n      <tr>\n        <td id=\"file-forloop-js-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-forloop-js-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>var</span> <span class=pl-s1>arr1</span> <span class=pl-c1>=</span> <span class=pl-kos>[</span><span class=pl-c1>1</span><span class=pl-kos>,</span> <span class=pl-c1>2</span><span class=pl-kos>,</span> <span class=pl-c1>3</span><span class=pl-kos>,</span> <span class=pl-c1>4</span><span class=pl-kos>]</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-forloop-js-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-forloop-js-LC2\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>var</span> <span class=pl-s1>arr2</span> <span class=pl-c1>=</span> <span class=pl-kos>[</span><span class=pl-c1>7</span><span class=pl-kos>,</span> <span class=pl-c1>8</span><span class=pl-kos>,</span> <span class=pl-c1>9</span><span class=pl-kos>,</span> <span class=pl-c1>1</span><span class=pl-kos>]</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-forloop-js-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-forloop-js-LC3\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-forloop-js-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-forloop-js-LC4\" class=\"blob-code blob-code-inner js-file-line\">loop1: <span class=pl-k>for</span> <span class=pl-kos>(</span><span class=pl-k>let</span> <span class=pl-s1>element1</span> <span class=pl-k>of</span> <span class=pl-s1>arr1</span><span class=pl-kos>)</span> <span class=pl-kos>{</span><span class=pl-c>//define a breakpoint</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-forloop-js-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-forloop-js-LC5\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-k>for</span> <span class=pl-kos>(</span><span class=pl-k>let</span> <span class=pl-s1>element2</span> <span class=pl-k>of</span> <span class=pl-s1>arr2</span><span class=pl-kos>)</span> <span class=pl-kos>{</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-forloop-js-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-forloop-js-LC6\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-en>log</span><span class=pl-kos>(</span><span class=pl-s1>element1</span><span class=pl-kos>,</span> <span class=pl-s>&quot; &quot;</span><span class=pl-kos>,</span> <span class=pl-s1>element2</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-forloop-js-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-forloop-js-LC7\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-forloop-js-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-forloop-js-LC8\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-k>if</span> <span class=pl-kos>(</span><span class=pl-s1>element1</span> <span class=pl-c1>===</span> <span class=pl-s1>element2</span><span class=pl-kos>)</span> <span class=pl-kos>{</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-forloop-js-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-forloop-js-LC9\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-en>log</span><span class=pl-kos>(</span><span class=pl-s>&quot;duplicate numbers&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-forloop-js-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-forloop-js-LC10\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-k>break</span> loop1<span class=pl-kos>;</span><span class=pl-c>//if a specific condition is met , break the loop</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-forloop-js-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-forloop-js-LC11\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-kos>}</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-forloop-js-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-forloop-js-LC12\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-kos>}</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-forloop-js-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-forloop-js-LC13\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-kos>}</span></td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/RizkyRajitha/ef461d86fc6116f066fa694d2af5bf08/raw/d8e74bf7a1a80216becc857c88e1e0d031d86345/forloop.js\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/RizkyRajitha/ef461d86fc6116f066fa694d2af5bf08#file-forloop-js\">forloop.js</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></li>\n</ol>\n</span>\n<h2>So, did i miss anything 👀,You can leave a comment and i’ll include your awesome tips in this article.And i will keep this post updated with my findings.</h2>\n<h2>Cheers 🥂 , Have a Nice day.</h2>","frontmatter":{"id":"5ddd5b35e8da2700179c3d4e","title":"Awesome Js Tips.(Few of em )","date":"November 26, 2019","description":null}}},"pageContext":{"slug":"/5ddd5b35e8da2700179c3d4e/","previous":{"fields":{"slug":"/5dd237b4ce297f001796521b/"},"frontmatter":{"title":"How i build my first npm package, a command like chat application"}},"next":{"fields":{"slug":"/5e778f9c61c45300170c04a9/"},"frontmatter":{"title":"what's inside QR codes"}}}},"staticQueryHashes":["2841359383"]}